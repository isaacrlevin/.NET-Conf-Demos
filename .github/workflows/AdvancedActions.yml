name: Build and Deploy Advanced Actions
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
    - 'AdvancedActions/**'
    - '.github/workflows/AdvancedActions.yml'
  workflow_dispatch:
env:
  AZURE_WEBAPP_NAME: AdvancedActions
  AZURE_WEBAPP_PACKAGE_PATH: AdvancedActions/publish
  AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AdvancedActions_aa9e }}
  AZURE_WEBAPP_STAGING_PUBLISH_PROFILE: ${{ secrets.AdvancedActions_Staging }}
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  WORKING_DIRECTORY: AdvancedActions
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - run: echo "Build and unit test our code"
    - uses: actions/checkout@v2
    - name: Install Playwright Global Tool
      run: dotnet tool install --global Microsoft.Playwright.CLI
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        dotnet-version: 5.0.x
    - name: Install Playwright
      run: playwright install
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.8.0
      with:
        dotnet-version: 6.0.x
    - name: Test
      run: dotnet test
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} -r win-x86 --self-contained true --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Publish Arifacts
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        name: Publish

  pr:
    runs-on: ubuntu-latest
    if: github.event.number != null #  this only runs when in a PR
    needs: [build]
    steps:
    - run: echo "Deploy code to PR#${{ github.event.number }}"
    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Create PR Slot and Get Publish Profile
      run: |
        az account set -s ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        az webapp deployment slot create --name AdvancedActions --resource-group .NETConf --slot "pr-${{ github.event.number }}"
        slot=$(az webapp deployment list-publishing-profiles --name AdvancedActions --resource-group .NETConf --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --slot 'pr-${{ github.event.number }}' --xml --output tsv)
        echo "SLOTNAME=$slot" >> $GITHUB_ENV
    - name: Download Publish Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Publish
        path: ${{ github.workspace }}/Publish
    - name: 'Deploy App to PR Environment'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ github.workspace }}/Publish
        publish-profile: ${{ env.SLOT_NAME }}
        slot-name: 'pr-${{ github.event.number }}'
    - uses: tzkhan/pr-update-action@v1.1.1
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        branch-regex: '.'
        body-template: '<a href="https://advancedactions-pr-${{ github.event.number }}.azurewebsites.net/" target="_blank">Link to PR Site</a>'
        replace-body: false
        lowercase-branch: false
        title-template: '.'
        replace-title: false
        title-prefix-space: false
        uppercase-title: false
        body-prefix-newline-count: 2
        uppercase-body: false

  staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # only run on the main trunk
    needs: [build]
    environment:
        name: Staging
        url: ${{ steps.deploy_staging.outputs.webapp-url }}
    steps:
    - run: echo "Deploy code to dev"
    - name: Download Publish Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Publish
        path: ${{ github.workspace }}/Publish
    - name: 'Deploy App to PR Environment'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ github.workspace }}/Publish
        publish-profile: ${{ env.AZURE_WEBAPP_STAGING_PUBLISH_PROFILE }}
        slot-name: 'staging'

  prod:
    needs: [staging]
    environment:
        name: Prod
        url: ${{ steps.deploy_staging.outputs.webapp-url }}
    runs-on: ubuntu-latest
    steps:
    - name: Download Publish Artifacts
      uses: actions/download-artifact@v2
      with:
        name: Publish
        path: ${{ github.workspace }}/Publish
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ github.workspace }}/Publish
        publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }}